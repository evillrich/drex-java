classDiagram
    class PatternElement {
        <<abstract>>
        -string comment
        +getComment() string
    }

    class CompositePatternElement {
        <<abstract>>
        -string bind
        -PatternElement[] elements
        +getBind() string
        +getElements() PatternElement[]
    }

    class DrexPattern {
        -string version
        -string name
        -integer editDistance
        +getVersion() string
        +getName() string
        +getEditDistance() integer
        +accept(visitor)
    }

    class Group {
        +accept(visitor)
    }

    class Repeat {
        -RepeatMode mode
        +getMode() RepeatMode
        +accept(visitor)
    }

    class Or {
        +accept(visitor)
    }

    class LineElement {
        <<abstract>>
        +accept(visitor)
    }

    class Line {
        -string regex
        -BindConfig bind
        +getRegex() string
        +getBind() BindConfig
        +accept(visitor)
    }

    class Anyline {
        -string bind
        +getBind() string
        +accept(visitor)
    }

    class RepeatMode {
        <<enumeration>>
        zeroOrMore
        oneOrMore
        zeroOrOne
    }

    class BindConfig {
        -string path
        -string format
        +getPath() string
        +getFormat() string
    }

%% Relationships
    PatternElement <|-- CompositePatternElement : extends
    PatternElement <|-- LineElement : extends

    CompositePatternElement <|-- DrexPattern : extends
    CompositePatternElement <|-- Group : extends
    CompositePatternElement <|-- Repeat : extends
    CompositePatternElement <|-- Or : extends

    LineElement <|-- Line : extends
    LineElement <|-- Anyline : extends

    CompositePatternElement "1" *-- "many" PatternElement : contains

    Repeat --> RepeatMode : uses
    Line "1" *-- "0..many" BindConfig : bind

%% Self-referencing for recursive structure
    PatternElement ..> PatternElement : references